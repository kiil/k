[{"content":"","date":null,"permalink":"/en/resource/","section":"Resources","summary":"","title":"Resources"},{"content":"","date":null,"permalink":"/en/blog/","section":"Blog","summary":"","title":"Blog"},{"content":"I wanted to get some links to some content on the Citizen\u0026rsquo;s journalism site Folkets to be able to work with this with AI.\nI could have used the site map.\nBut the site has several RSS feeds that contain mere useful information and are structured more in line with the user facing structure of the site.\nI just needed to get the front page feed which is available here:\nhttps://www.folkets.dk/rss.xml\nNushell is great for working with structured data and has most of what I needed builtin. Except I needed to use the query plugin also.\nI used these:\nNushell nu_plugin_query · nushell/nushell · GitHub Now to get the actual links from the feed all I had to do was give this command at my terminal:\nhttp get https://www.folkets.dk/rss.xml | query web -q item | each { $in.3 | str trim } There is an easier way to get the links (but usually not in the same order as the source):\nhttp get https://www.folkets.dk/rss.xml | query xml //item/link Then nushell gives me a simple table with the links like so:\n╭───┬──────────────────────────────────╮ │ # │ //item/link │ ├───┼──────────────────────────────────┤ │ 0 │ https://www.folkets.dk/node/5036 │ │ 1 │ https://www.folkets.dk/node/5041 │ │ 2 │ https://www.folkets.dk/node/5038 │ │ 3 │ https://www.folkets.dk/node/5035 │ │ 4 │ https://www.folkets.dk/node/5040 │ │ 5 │ https://www.folkets.dk/node/5042 │ │ 6 │ https://www.folkets.dk/node/5037 │ │ 7 │ https://www.folkets.dk/node/5043 │ │ 8 │ https://www.folkets.dk/node/5039 │ │ 9 │ https://www.folkets.dk/node/5032 │ ╰───┴──────────────────────────────────╯ This can even be done with nushell without any plugins like so:\nhttp get https://www.folkets.dk/rss.xml | from xml | get content | get content | get 0 | where tag == item | get content | flatten | where tag == link | get content | flatten | get content ","date":"3 June 2024","permalink":"/en/blog/2024-06-03-get-items-from-rss-feed-with-nushell/","section":"Blog","summary":"I wanted to get some links to some content on the Citizen\u0026rsquo;s journalism site Folkets to be able to work with this with AI.","title":"Get items from rss feed with nushell"},{"content":"","date":null,"permalink":"/en/tools/nushell/","section":"Tools","summary":"","title":"Nushell"},{"content":"","date":null,"permalink":"/en/tools/","section":"Tools","summary":"","title":"Tools"},{"content":"Working with AI, particularly LLM\u0026rsquo;s and speech.\nInterested in the interplay of langauge, thought and dialogue.\n","date":null,"permalink":"/en/","section":"Welcome to Kiils","summary":"Working with AI, particularly LLM\u0026rsquo;s and speech.","title":"Welcome to Kiils"},{"content":"","date":null,"permalink":"/en/tools/chatgpt/","section":"Tools","summary":"","title":"ChatGPT"},{"content":"Welcome to aichat 0.17.0\nType \u0026ldquo;.help\u0026rdquo; for additional help.\nalm\u0026gt; I need help! My mental load is too much. Write some python code to help me get organized! Sure, here is a simple Python script that can help you manage your tasks. It allows you to add, view, and remove tasks from a to-do list.\nimport json import os FILENAME = \u0026#39;todo_list.json\u0026#39; def load_tasks(): if os.path.exists(FILENAME): with open(FILENAME, \u0026#39;r\u0026#39;) as file: return json.load(file) return [] def save_tasks(tasks): with open(FILENAME, \u0026#39;w\u0026#39;) as file: json.dump(tasks, file, indent=4) def add_task(task): tasks = load_tasks() tasks.append({\u0026#34;task\u0026#34;: task, \u0026#34;completed\u0026#34;: False}) save_tasks(tasks) print(f\u0026#39;Task \u0026#34;{task}\u0026#34; added!\u0026#39;) def view_tasks(): tasks = load_tasks() if not tasks: print(\u0026#34;No tasks available.\u0026#34;) else: for i, item in enumerate(tasks): status = \u0026#34;Done\u0026#34; if item[\u0026#34;completed\u0026#34;] else \u0026#34;Not Done\u0026#34; print(f\u0026#34;{i + 1}. {item[\u0026#39;task\u0026#39;]} - {status}\u0026#34;) def remove_task(task_number): tasks = load_tasks() if 0 \u0026lt; task_number \u0026lt;= len(tasks): removed = tasks.pop(task_number - 1) save_tasks(tasks) print(f\u0026#39;Task \u0026#34;{removed[\u0026#34;task\u0026#34;]}\u0026#34; removed!\u0026#39;) else: print(\u0026#34;Invalid task number.\u0026#34;) def mark_task_as_done(task_number): tasks = load_tasks() if 0 \u0026lt; task_number \u0026lt;= len(tasks): tasks[task_number - 1][\u0026#34;completed\u0026#34;] = True save_tasks(tasks) print(f\u0026#39;Task \u0026#34;{tasks[task_number - 1][\u0026#34;task\u0026#34;]}\u0026#34; marked as done!\u0026#39;) else: print(\u0026#34;Invalid task number.\u0026#34;) def main(): while True: print(\u0026#34;\\n1. Add Task\\n2. View Tasks\\n3. Remove Task\\n4. Mark Task as Done\\n5. Exit\u0026#34;) choice = input(\u0026#34;Enter your choice: \u0026#34;) if choice == \u0026#39;1\u0026#39;: task = input(\u0026#34;Enter the task: \u0026#34;) add_task(task) elif choice == \u0026#39;2\u0026#39;: view_tasks() elif choice == \u0026#39;3\u0026#39;: task_number = int(input(\u0026#34;Enter task number to remove: \u0026#34;)) remove_task(task_number) elif choice == \u0026#39;4\u0026#39;: task_number = int(input(\u0026#34;Enter task number to mark as done: \u0026#34;)) mark_task_as_done(task_number) elif choice == \u0026#39;5\u0026#39;: break else: print(\u0026#34;Invalid choice! Please try again.\u0026#34;) if __name__ == \u0026#34;__main__\u0026#34;: main() This script uses a simple JSON file to store your tasks. You can:\nAdd a new task. View all tasks. Remove a task by its number. Mark a task as done. Exit the program. To run the script, simply execute the Python file in your terminal or command prompt. This should give you a basic task manager to help you get organized.\n","date":"31 May 2024","permalink":"/en/blog/2024-05-31-how-programming-can-help-reduce-mental-load/","section":"Blog","summary":"Welcome to aichat 0.","title":"How programming can help reduce mental load 🦾"},{"content":"Requirements # Nushell Nushell - query plugin Aichat - CLI tool AI platforms Mission # Know a little about each large city in India\nSolution # http get https://en.wikipedia.org/wiki/List_of_cities_in_India_by_population | query web --as-table [City \u0026#39;Population(2011)[3]\u0026#39; \u0026#39;Population(2001)[3][a]\u0026#39; \u0026#39;State or unionterritory\u0026#39; \u0026#39;Ref\u0026#39;] | select City | insert desc {|row| $row.City | aichat \u0026#39;provide ultra short description of this city\u0026#39; } | save cities.json Explanation # The first line gets the web page from Wikipedia The second converts the html table into nushell table format The third selects the City column The fourth creates a new column called \u0026lsquo;desc\u0026rsquo; The fifth feeds city names row by row to aichat with my instruction The sixth saves the result in json format Result # Now each city has a short description appended:\n[ { \u0026#34;City\u0026#34;: \u0026#34;Mumbai\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;India\u0026#39;s bustling financial hub and entertainment capital, Mumbai is a diverse metropolis known for its iconic Bollywood industry, historic landmarks, and vibrant street life.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Delhi\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;India\u0026#39;s capital, historical landmarks, diverse culture, political hub.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Bangalore\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Bangalore, also known as Bengaluru, is the capital of Karnataka, India, known for its IT industry and pleasant climate.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Hyderabad\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Capital of Telangana, India; known for biryani, technology industry, Charminar, and pearl trading.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Ahmedabad\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Ahmedabad is a vibrant Indian city known for its textiles, rich history, and the Sabarmati Ashram associated with Mahatma Gandhi.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Chennai\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Coastal South Indian city known for its cultural heritage, IT industry, and Marina Beach.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Kolkata \u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Kolkata: Cultural capital of India; historical city with colonial architecture, vibrant arts scene, and notable intellectual heritage.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Surat\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Surat is a bustling port city in the Indian state of Gujarat known for its diamond cutting and textile industries.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Pune\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Pune is a vibrant educational and IT hub in western India known for its historical landmarks and cultural diversity.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Jaipur\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Jaipur, also known as the Pink City, is the capital of Rajasthan in India, known for its rich history, stunning palaces, and vibrant culture.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Lucknow\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Capital of Uttar Pradesh, known for its Nawabi era history and exquisite cuisine, particularly kebabs and biryanis.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Kanpur\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Kanpur: Industrial city on the Ganges in Uttar Pradesh, India, known for textiles and leather.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Nagpur\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Nagpur is a major city in Maharashtra, India, known for its oranges and as a political and commercial hub in central India.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Indore\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Indore is a bustling, commercial city in central India, known for its culinary scene, historical landmarks, and as the education hub of the state of Madhya Pradesh.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Thane\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Thane is a bustling city adjacent to Mumbai in Maharashtra, India, known for its lakes and the ancient Masunda Lake temple complex.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Bhopal\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Bhopal is the capital city of the Indian state of Madhya Pradesh, known for its lakes, greenery, and rich history, including the Bhopal gas tragedy.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Visakhapatnam\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Visakhapatnam: Indian coastal city, port hub, industrial center, and scenic beauty in Andhra Pradesh.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Pimpri-Chinchwad\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Pimpri-Chinchwad: Industrial city in Maharashtra, India, known for its automotive and manufacturing industries, part of Pune Metropolitan Region.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Patna\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Capital of Bihar, India; ancient city on the Ganges River.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Vadodara\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Vadodara, formerly known as Baroda, is a culturally-rich city in the Indian state of Gujarat, known for its palaces, parks, temples, and educational institutions.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Ghaziabad\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Ghaziabad is a rapidly urbanizing city in the Indian state of Uttar Pradesh, part of the National Capital Region, known for its industrial growth and proximity to New Delhi.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Ludhiana\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Ludhiana: Industrial city in Punjab, India, known for hosiery, textiles, and light engineering.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Agra\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Agra: Indian city, home to the Taj Mahal.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Nashik\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Nashik: Indian city known for temples, vineyards, Kumbh Mela festival, and as a Hindu pilgrimage site near the Godavari River.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Faridabad\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Faridabad is an industrial city in the northern Indian state of Haryana, part of the National Capital Region near New Delhi.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Meerut\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Meerut is a historical city in the Indian state of Uttar Pradesh, known for its role in the 1857 First War of Indian Independence and as a hub for sports goods manufacturing.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Rajkot\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Rajkot is a vibrant city in the Indian state of Gujarat, known for its history, textile industry, and Gandhi-related landmarks.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Kalyan-Dombivali\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Kalyan-Dombivali is a twin city and a municipal corporation in the Thane district of Maharashtra, India, part of the Mumbai Metropolitan Region known for its residential areas and rapidly developing infrastructure.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Vasai-Virar\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Vasai-Virar is a rapidly urbanizing city in the Mumbai Metropolitan Region of Maharashtra, India, known for its cultural heritage and growing infrastructure.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Varanasi\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Ancient holy city on the Ganges in India, known for spirituality, ghats, and temples.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Srinagar\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Srinagar is the summer capital of Jammu and Kashmir, India, known for its beautiful lakes, houseboats, and gardens.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Aurangabad\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Aurangabad is a historic city in Maharashtra, India, known for its medieval monuments, including the UNESCO World Heritage Sites of Ajanta and Ellora caves.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Dhanbad\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Dhanbad is an Indian city known for coal mining and industrial activities, located in Jharkhand state.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Amritsar\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Sikh holy city, Golden Temple, Punjab region, India.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Navi Mumbai\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Planned satellite city of Mumbai, India, with modern infrastructure and rapid urban growth.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Prayagraj\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Prayagraj, formerly known as Allahabad, is a historic city in Uttar Pradesh, India, renowned for its confluence of three rivers: the Ganges, Yamuna, and mythical Saraswati, making it a pivotal site for Hindu pilgrimages.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Howrah\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Howrah is an industrial city located in the Indian state of West Bengal, featuring the iconic Howrah Bridge and serving as a transportation hub adjacent to Kolkata.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Ranchi\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Ranchi is the capital of the Indian state of Jharkhand, known for its waterfalls, tribal heritage, and rich mineral resources.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Jabalpur\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Jabalpur: A historic Indian city known for marble rock formations along the Narmada River, with significant cultural heritage and military bases.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Gwalior\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Gwalior is a historic city in central India, known for its majestic hilltop fort, rich cultural heritage, and classical music tradition.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Coimbatore\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Coimbatore is a bustling industrial city in the southern Indian state of Tamil Nadu, known for its textile industry, manufacturing, pleasant weather, and proximity to hill stations like Ooty.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Vijayawada\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Vijayawada: Major city in Andhra Pradesh, India, known for the Krishna River and canal network.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Jodhpur\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Jodhpur: Indian city, known as the \\\u0026#34;Blue City\\\u0026#34;, famous for its historic Mehrangarh Fort and vibrant culture.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Madurai\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Ancient temple city in Tamil Nadu, India, known for the Meenakshi Amman Temple.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Raipur\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Raipur is the capital city of the Indian state of Chhattisgarh, known for its steel industries and educational institutions.\\n\u0026#34; }, { \u0026#34;City\u0026#34;: \u0026#34;Kota\u0026#34;, \u0026#34;desc\u0026#34;: \u0026#34;Kota: An educational hub in Rajasthan, India known for its coaching centers for competitive exam preparations and the Chambal river.\\n\u0026#34; } ] That would have taken a long time to do manually.\n","date":"22 March 2024","permalink":"/en/blog/using-nushell-with-generative-artificial-intelligence/","section":"Blog","summary":"Requirements # Nushell Nushell - query plugin Aichat - CLI tool AI platforms Mission # Know a little about each large city in India","title":"Using Nushell 🐘 with Generative Artificial Intelligence 🤖"},{"content":"","date":null,"permalink":"/en/emner/","section":"Emner","summary":"","title":"Emner"},{"content":"","date":null,"permalink":"/en/emner/finansiering/","section":"Emner","summary":"","title":"Finansiering"},{"content":"Works with:\n❯ : nu --version 0.82.0 run work open window right now! normally\ntask add run task add work task add open window due:now\n[run work [open window due:now]] | each {task add $in}\nCustom command\ndef nt [] { each {task add $in} } Then we can simply do\n[run work [open window due:now]] | nt\nWe can also exptend the custom command to accept a list af new tasks as a positional parameter:\ndef nt [tasks?: list] { if ($in | describe) == nothing { $tasks | each { task add $in } } else { each { task add $in} } } Then we could write:\nnt [run work [open window due:now]] And get the same result.\nAnd finally taking into consideration if no list is provided and also adding a biot of doucmentation to the command:\n# Pipe in the list of tasks or give the list as a positional parameter # Format: [taskone tasktwo [task three due:now]] def nt [tasks?: list] { if ($in | describe) == nothing { if ($tasks | describe) == nothing { \u0026#39;Pipe in the list of task or give the list as a positional parameter\u0026#39; } else { $tasks | each { task add $in } } } else { each { task add $in} } } ","date":"24 July 2023","permalink":"/en/blog/making-taskwarrior-better-with-nushell/","section":"Blog","summary":"Works with:","title":"making taskwarrior better with nushell"},{"content":"","date":null,"permalink":"/en/tools/nvim/","section":"Tools","summary":"","title":"Nvim"},{"content":"","date":null,"permalink":"/en/emner/artificial-intelligence/","section":"Emner","summary":"","title":"Artificial Intelligence"},{"content":"","date":null,"permalink":"/en/tools/fontforge/","section":"Tools","summary":"","title":"Fontforge"},{"content":"","date":null,"permalink":"/en/genrer/","section":"Genrer","summary":"","title":"Genrer"},{"content":"The other day I posted a few lines on Facebook.\nMy intention was to point out what can be called perspective - that a case can be seen from several angles.\nSpecifically, it was about \u0026ldquo;Store Bededag\u0026rdquo; and the many other more or less official holidays that spring offers in Denmark. And there are a lot of them.\nMy point was that for a self-employed person who works from home, these could well be perceived as interruptions. As a kind of disturbance.\nThere were many reactions, as you now call it, to my post.\nSome stated that the many small mini-holidays in the spring were a welcome break from life as a wage earner in the hamster wheel.\nAnd yes. It was precisely a different perspective than the one I myself had p resented. And a perspective that I can easily relate to even though I am not independ ent. I can put myself in other situations if I pay attention to it.\nThere were also a number of other reactions which were of a slightly different type.\nIt was reactions that reminded me of the way the big language models work.\nBecause it was reactions that took fragments of what I put up, and work further with these fragments. And almost started to deduce other things than what I had actually written.\nWhen the language models do that, we say they \u0026ldquo;hallucinate\u0026rdquo;.\nIt doesn\u0026rsquo;t sound nice to say about people that they hallucinate when they maybe put a little too much into something you write or interpret a little too much from it.\nBut these are clearly examples of what happens when you do not treat other people\u0026rsquo;s words in a disciplined manner.\nThen it often becomes somewhat free association.\nYou can reduce the \u0026ldquo;risk\u0026rdquo; of a conversation being characterized by too much free association, just as you can give it direction and context.\nThis kind of thing is no guarantee that the conversation won\u0026rsquo;t slip off the track and end up in a completely different place than it started. But you reduce the risk of that.\nBut also remember this:\nThe ordinary everyday conversation depends precisely on the other part y inviting in. And we all tend to fill a conversation with our own interpretations.\nThe problem arises when people conclude or infer something about the original text based on their own interpretation of it - without being sufficiently aware that this is happening.\nIf you, as a human, still want to retain some advantages over artificial intelligence for a while, then I would recommend that you pay attention to how you relate to other people\u0026rsquo;s words.\nBecause otherwise you run the risk of becoming a mediocre language model or a slightly advanced, but rather severely biased \u0026ldquo;auto-complete.\u0026rdquo;\nIt is at least as important, however, that you, as the person who starts a debate or posts some text, think a little about your wording.\nAs when talking with ChatGPT, it is important to set the framework for the conversation clearly from the start.\nSo both the sender of a message and the recipient of it have a responsibility for a successful conversation.\nAnd this applies regardless of whether you are talking to a human or a machine.\n","date":"23 May 2023","permalink":"/en/blog/humans-should-also-be-prompted-properly/","section":"Blog","summary":"The other day I posted a few lines on Facebook.","title":"Humans should also be prompted properly"},{"content":"I wanted to use the font Noto Sans with the Noto Emoji font for making an image overlay text in Hugo.\nI used Fontforge to merge the two fonts.\nAt first the emoji font was much larger than the text font.\nIn my case it only worked properly when\nOpening the text font first with \u0026lsquo;File -\u0026gt; Open File\u0026rsquo;. Then for \u0026lsquo;Element -\u0026gt; Font Info\u0026rsquo; under \u0026lsquo;General\u0026rsquo; setting \u0026lsquo;Em Size\u0026rsquo; to 2048. Now using \u0026lsquo;Element -\u0026gt; Merge Fonts\u0026rsquo; on the emoji font to merge the two. Finally creating the merged font file with \u0026lsquo;File -\u0026gt; Generate Fonts\u0026rsquo;. ","date":"23 May 2023","permalink":"/en/blog/merging-an-emoji-font-into-a-text-font/","section":"Blog","summary":"I wanted to use the font Noto Sans with the Noto Emoji font for making an image overlay text in Hugo.","title":"Merging an emoji 😘 font into a text font ❤️"},{"content":"","date":null,"permalink":"/en/genrer/tips--tricks/","section":"Genrer","summary":"","title":"Tips \u0026 Tricks"},{"content":"","date":null,"permalink":"/en/tools/marvin/","section":"Tools","summary":"","title":"Marvin"},{"content":"Recently I installed Marvin. Now, Marvin also happens to be the name of a dog dear to our family.\nSo my kids kind of feel strongly about the name, and were both a bit offended about an Artificial Intelligence with the same name.\nBut in this case Marvin is a\nbatteries-included library for building AI-powered software. Marvin\u0026rsquo;s job is to integrate AI directly into your codebase by making it look and feel like any other function. Marvin is building the gears, cranks, and pistons to let mechanical software systems integrate with and leverage the raw power of Large Language Models.\nTo test out this piece of software, I asked it to construct various bots for me.\nMarvin makes it easy to construct bots with different names, AI personalities and instructions.\nI\u0026rsquo;ve found it difficult to get ChatGPT to be humorous. But I gave it a go again with Marvin after I asked it to construct a bot capable of making cringy dad jokes.\nAfter constructing the bot I gave it this prompt:\nMe: give me some tricks to make me son laugh with emojis\nMarvin responded:\n🍍 + 🍰 = Pineapple upside-down cake 🤣 🧀 + 🥚 = Cheesy egg 🤪 🐘 + 🎂 = Elephant birthday cake 🤣 🐱 + 🎹 = Keyboard cat 🤪 🐷 + 🌽 = Corn on the hog 😆 My son did not find that amusing at all.\nThe thing is, though, I happen to know a lot more about my son than Marvin does. So I gave et a bit of context:\nMe: hi is ten years old and likes to play soccer please try with that again\nOf course! Here are some soccer-themed emoji combinations that might make your 10-year-old son laugh:\n⚽ + 🐶 = Doggy goal 🐾 🥅 + 💩 = Goalpost accident 😂 🦶 + 🥔 = Potato foot 🤣 🕺 + ⚽ = Soccer dance party 🎉 🥅 + 🕷️ = Spider goalie 🕸️ I hope these make your son laugh and bring a smile to his face!\nThose really made my son smile. And number two and number three made him LOL.\nSo, why am I writing a blog post about this?\nBecause I am interested in the intersection between Artificial Intelligence, language and \u0026ldquo;soul\u0026rdquo;.\nI starting to think about this question:\nHow much does an AI need to know about us to make an ongoing interaction worthwhile?\nGiving a bot a \u0026ldquo;personality\u0026rdquo; is one thing.\nRevealing your own innermost life to the bot?\nThat is something else entirely.\nBut this is exactly what will start to happen. Now.\nBonus:\nCringeDadBot: I\u0026rsquo;m here to brighten your day with some terrible dad jokes. Just ask me to tell you a joke, and I\u0026rsquo;ll do my best to make you groan. If you want to stop the jokes, just say \u0026lsquo;stop\u0026rsquo; or \u0026lsquo;bye\u0026rsquo;. Let\u0026rsquo;s have some fun!\nME: tell me a joke about a dad who always uses chatgpt and thinks he will get rich but never gets rich\nCringeDadBot: Why did the dad keep using chatgpt to try and get rich?\nBecause he thought it was a text-to-coin converter!\n","date":"22 May 2023","permalink":"/en/blog/how-chatgpt-made-my-surly-son-laugh/","section":"Blog","summary":"Recently I installed Marvin.","title":"🦶 + 🥔 = Potato foot 🤣 - and other examples of how ChatGPT made my son laugh. And why it is important"},{"content":"Me: is chatgpt really just a glorified markov chain\nChatGPT:\nChatGPT is a type of language model that is based on the transformer architecture, which is a neural network-based approach to natural language processing. While the Markov Chain is a mathematical model that can be used to generate text, it is a relatively simple model compared to neural network-based models like ChatGPT.\nChatGPT is trained on a massive amount of text data and uses a deep neural network with multiple layers to learn patterns in the data. The model is trained to predict the next word in a sentence based on the context of the previous words. This allows ChatGPT to generate text that is more coherent and semantically meaningful than text generated by a simple Markov Chain.\nMarkov Chain, on the other hand, is a statistical model that uses a set of states and transition probabilities to predict the next state in a sequence. It is trained on a smaller amount of data compared to neural network-based models like ChatGPT and generates text based on the probability of certain words or phrases following others.\nIn summary, ChatGPT is a much more advanced and sophisticated model than a simple Markov Chain, and can generate text that is more coherent, contextually appropriate, and human-like.\nMe: how does a markov chain differ from \u0026ldquo;deep learning\u0026rdquo; in neural networks\nChatGPT:\nMarkov Chain and deep learning neural network are two different approaches to modeling and generating sequences of data, such as text.\nA Markov Chain is a mathematical model that uses a set of states and transition probabilities to predict the next state in a sequence. It is trained on a relatively small amount of data and generates text by predicting the next word or phrase based on the probability of certain words or phrases following others. Markov Chain models are simple and computationally efficient, but they are limited in their ability to capture complex patterns and relationships in the data.\nDeep learning neural networks, on the other hand, are a type of machine learning that uses multi-layered neural networks to learn patterns in data. These models are trained on a large amount of data and are able to automatically learn representations of the data that can be used to generate text or other sequences. They are more powerful and flexible than Markov Chain models as they can learn a wide range of features and patterns in the data, and can also be used to perform a wide range of natural language processing tasks such as language translation, text summarization, and sentiment analysis.\nIn summary, Markov Chain is a simpler model compared to deep learning neural network, but deep learning neural networks are more powerful and flexible. They are able to learn more complex patterns in data and can be used to perform a wide range of natural language processing tasks.\n","date":"12 January 2023","permalink":"/en/blog/chatgpt-glorified-markov-chain/","section":"Blog","summary":"Me: is chatgpt really just a glorified markov chain","title":"Is ChatGPT more than a glorified Markov chain? Here is what ChatGPT itself has to say about that"},{"content":"","date":null,"permalink":"/en/emner/kunstig-intelligens/","section":"Emner","summary":"","title":"Kunstig Intelligens"},{"content":"","date":null,"permalink":"/en/emner/nlp/","section":"Emner","summary":"","title":"Nlp"},{"content":"","date":null,"permalink":"/en/emner/tekstskabelse/","section":"Emner","summary":"","title":"Tekstskabelse"},{"content":"","date":null,"permalink":"/en/emner/billing/","section":"Emner","summary":"","title":"Billing"},{"content":"","date":null,"permalink":"/en/cases/","section":"Cases","summary":"","title":"Cases"},{"content":"","date":null,"permalink":"/en/cases/folkets/","section":"Cases","summary":"","title":"Folkets"},{"content":"","date":null,"permalink":"/en/emner/payment/","section":"Emner","summary":"","title":"Payment"},{"content":"","date":null,"permalink":"/en/genrer/recommendation/","section":"Genrer","summary":"","title":"Recommendation"},{"content":"I had to upgrade my payment system on my media platform – Folkets.\nSince I was already on Stripe, I was looking for something that made it easy to keep up with Stripe in the sense that Stripe is developing new features at a rapid rate.\nI found Servicebot.io which is basically a layer on top of Stripe\u0026rsquo;s very flexible API. This layer makes it easy to give your users or customers an interaction with your payment implementation that is both simple to use and complete with regards to functionality.\nHere is some of it on Folkets:\nI needed, for example, functionality where a user could download invoices past and present, since I am planning to do more B2B, and companies need the invoice for their bookkeeping.\nAt the same time I did not want a cluttered or complicated user interface that could be off putting to non-business customers.\nServicebot.io made it easy for me to achieve both of these objectives.\nBut what really set Servicebot aside, was the service they provided during the transition from my old payment layer to the new one they offered.\nAny issue or request, that I had, was taken seriously. They were always replying within a few hours, in spite of the fact that we are on opposite ends of the Atlantic ocean.\nMaybe the extraordinary responsiveness and service is due in part to the relatively small team behind the service, but it is a level of customer service I think every company should strive for regardless of size.\nServicebot.io has my highest recommendation.\nHere is a video of it live on Folkets:\n","date":"14 May 2020","permalink":"/en/blog/servicebot-is-great/","section":"Blog","summary":"Servicebot has my highest recommendation","title":"Servicebot.io is great"},{"content":"","date":null,"permalink":"/en/emner/stripe/","section":"Emner","summary":"","title":"Stripe"},{"content":"Writing styles for ChatGPT, use in initial \u0026ldquo;system message\u0026rdquo;.\n","date":null,"permalink":"/en/resource/personas/","section":"Resources","summary":"Writing styles for ChatGPT, use in initial \u0026ldquo;system message\u0026rdquo;.","title":"Awesome ChatGPT Personas"},{"content":"","date":null,"permalink":"/en/brands/","section":"Brands","summary":"","title":"Brands"},{"content":"","date":null,"permalink":"/en/categories/","section":"Categories","summary":"","title":"Categories"},{"content":"","date":"1 January 0001","permalink":"/en/domain/climate-encyclopedia/","section":"Domains","summary":"","title":"Climate Encyclopedia"},{"content":"","date":null,"permalink":"/en/domain/","section":"Domains","summary":"","title":"Domains"},{"content":"Pricing on www.folkets.dk (Folkets) # I receive many request for paid content on www.folkets.dk\nAdvertorials in English\nUSD 500\nAdvertorials in Danish\nUSD 400\nAnything gambling related regardless of language\nUSD 1000\nOne link per advertorial, although inclusion of two extra non-commercial links are accepted. Bulk discount available.\nPlease contact:\nKiils V/ Lennart Kiil\nlennartkiil@gmail.com\n","date":"1 January 0001","permalink":"/en/domain/folkets/","section":"Domains","summary":"Pricing on www.","title":"Folkets.dk"},{"content":"","date":"1 January 0001","permalink":"/en/person/lennart/","section":"Person","summary":"","title":"Lennart Kiil"},{"content":"","date":null,"permalink":"/en/person/","section":"Person","summary":"","title":"Person"},{"content":"","date":null,"permalink":"/en/tags/","section":"Tags","summary":"","title":"Tags"}]